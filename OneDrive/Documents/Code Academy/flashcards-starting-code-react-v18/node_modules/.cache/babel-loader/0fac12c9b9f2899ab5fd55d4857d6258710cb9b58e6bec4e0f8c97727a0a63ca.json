{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { addQuiz } from '../quizzes/quizzesSlice'; // Import addQuiz action from quizzes slice\n\nconst initialState = {\n  topics: {}\n};\nconst topicsSlice = createSlice({\n  name: 'topics',\n  initialState,\n  reducers: {\n    addTopic(state, action) {\n      const {\n        id,\n        name,\n        icon\n      } = action.payload;\n      state.topics[id] = {\n        id,\n        name,\n        icon,\n        quizIds: [] // Initialize with an empty array\n      };\n    }\n    // Other reducers can be added here\n  },\n  extraReducers: builder => {\n    // Handle the addQuiz action\n    builder.addCase(addQuiz, (state, action) => {\n      const {\n        topicId,\n        id\n      } = action.payload; // Destructure topicId and quiz id from action payload\n      const topic = state.topics[topicId]; // Find the topic by topicId\n      if (topic) {\n        topic.quizIds.push(id); // Add the quiz id to the quizIds array of the topic\n      }\n    });\n  }\n});\n\n// Export actions\nexport const {\n  addTopic\n} = topicsSlice.actions;\n\n// Selector to get the topics\nexport const selectTopics = state => state.topics.topics;\n\n// Export the reducer\nexport default topicsSlice.reducer;","map":{"version":3,"names":["createSlice","addQuiz","initialState","topics","topicsSlice","name","reducers","addTopic","state","action","id","icon","payload","quizIds","extraReducers","builder","addCase","topicId","topic","push","actions","selectTopics","reducer"],"sources":["C:/Users/Matthew De Haan/OneDrive/Documents/Code Academy/flashcards-starting-code-react-v18/src/features/topics/topicsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { addQuiz } from '../quizzes/quizzesSlice'; // Import addQuiz action from quizzes slice\r\n\r\nconst initialState = {\r\n  topics: {},\r\n};\r\n\r\nconst topicsSlice = createSlice({\r\n  name: 'topics',\r\n  initialState,\r\n  reducers: {\r\n    addTopic(state, action) {\r\n      const { id, name, icon } = action.payload;\r\n      state.topics[id] = {\r\n        id,\r\n        name,\r\n        icon,\r\n        quizIds: [], // Initialize with an empty array\r\n      };\r\n    },\r\n    // Other reducers can be added here\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Handle the addQuiz action\r\n    builder.addCase(addQuiz, (state, action) => {\r\n      const { topicId, id } = action.payload; // Destructure topicId and quiz id from action payload\r\n      const topic = state.topics[topicId]; // Find the topic by topicId\r\n      if (topic) {\r\n        topic.quizIds.push(id); // Add the quiz id to the quizIds array of the topic\r\n      }\r\n    });\r\n  },\r\n});\r\n\r\n// Export actions\r\nexport const { addTopic } = topicsSlice.actions;\r\n\r\n// Selector to get the topics\r\nexport const selectTopics = (state) => state.topics.topics;\r\n\r\n// Export the reducer\r\nexport default topicsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,yBAAyB,CAAC,CAAC;;AAEnD,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,CAAC;AACX,CAAC;AAED,MAAMC,WAAW,GAAGJ,WAAW,CAAC;EAC9BK,IAAI,EAAE,QAAQ;EACdH,YAAY;EACZI,QAAQ,EAAE;IACRC,QAAQA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtB,MAAM;QAAEC,EAAE;QAAEL,IAAI;QAAEM;MAAK,CAAC,GAAGF,MAAM,CAACG,OAAO;MACzCJ,KAAK,CAACL,MAAM,CAACO,EAAE,CAAC,GAAG;QACjBA,EAAE;QACFL,IAAI;QACJM,IAAI;QACJE,OAAO,EAAE,EAAE,CAAE;MACf,CAAC;IACH;IACA;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1B;IACAA,OAAO,CAACC,OAAO,CAACf,OAAO,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK;MAC1C,MAAM;QAAEQ,OAAO;QAAEP;MAAG,CAAC,GAAGD,MAAM,CAACG,OAAO,CAAC,CAAC;MACxC,MAAMM,KAAK,GAAGV,KAAK,CAACL,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC;MACrC,IAAIC,KAAK,EAAE;QACTA,KAAK,CAACL,OAAO,CAACM,IAAI,CAACT,EAAE,CAAC,CAAC,CAAC;MAC1B;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEH;AAAS,CAAC,GAAGH,WAAW,CAACgB,OAAO;;AAE/C;AACA,OAAO,MAAMC,YAAY,GAAIb,KAAK,IAAKA,KAAK,CAACL,MAAM,CAACA,MAAM;;AAE1D;AACA,eAAeC,WAAW,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}