{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matthew De Haan\\\\OneDrive\\\\Documents\\\\Code Academy\\\\flashcards-starting-code-react-v18\\\\src\\\\components\\\\NewQuizForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { addQuiz } from \"../features/quizzes/quizzesSlice\"; // Import the addQuiz action\nimport { selectTopics } from \"../features/topics/topicsSlice\"; // Import selector for topics\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewQuizForm() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  // Use selector to get topics from state\n  const topics = useSelector(selectTopics);\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('Submitting Quiz:', {\n      name,\n      topicId,\n      cards\n    }); // Debugging line\n\n    if (name.length === 0 || topicId.length === 0) {\n      console.log('Quiz name or topic ID is missing'); // Debugging line\n      return; // Ensure both name and topicId are provided\n    }\n    const cardIds = cards.map(() => uuidv4()); // Generate IDs for cards\n\n    // Dispatch the addQuiz action with the quiz details\n    dispatch(addQuiz({\n      id: uuidv4(),\n      // Generate ID for the quiz\n      name,\n      topicId,\n      cardIds\n    }));\n    console.log('Quiz added:', {\n      id: uuidv4(),\n      name,\n      topicId,\n      cardIds\n    }); // Debugging line\n\n    navigate(ROUTES.quizzesRoute()); // Navigate after dispatching\n  };\n  const addCardInputs = e => {\n    e.preventDefault();\n    setCards(cards.concat({\n      front: \"\",\n      back: \"\"\n    })); // Add new card\n  };\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i)); // Remove specific card\n  };\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value; // Update card front or back\n    setCards(newCards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a new quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"quiz-name\",\n        value: name,\n        onChange: e => setName(e.currentTarget.value),\n        placeholder: \"Quiz Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"quiz-topic\",\n        onChange: e => setTopicId(e.currentTarget.value),\n        placeholder: \"Topic\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), Object.values(topics).map(topic => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: topic.id,\n          children: topic.name\n        }, topic.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-front-back\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: `card-front-${index}`,\n          value: cards[index].front,\n          onChange: e => updateCardState(index, \"front\", e.currentTarget.value),\n          placeholder: \"Front\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `card-back-${index}`,\n          value: cards[index].back,\n          onChange: e => updateCardState(index, \"back\", e.currentTarget.value),\n          placeholder: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => removeCard(e, index),\n          className: \"remove-card-button\",\n          children: \"Remove Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCardInputs,\n          children: \"Add a Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(NewQuizForm, \"7OUosOTz5tJ5h1KV3vnl5QX3lqs=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = NewQuizForm;\nvar _c;\n$RefreshReg$(_c, \"NewQuizForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useNavigate","v4","uuidv4","ROUTES","addQuiz","selectTopics","jsxDEV","_jsxDEV","NewQuizForm","_s","name","setName","cards","setCards","topicId","setTopicId","navigate","dispatch","topics","handleSubmit","e","preventDefault","console","log","length","cardIds","map","id","quizzesRoute","addCardInputs","concat","front","back","removeCard","index","filter","card","i","updateCardState","side","value","newCards","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","currentTarget","placeholder","Object","values","topic","className","onClick","type","_c","$RefreshReg$"],"sources":["C:/Users/Matthew De Haan/OneDrive/Documents/Code Academy/flashcards-starting-code-react-v18/src/components/NewQuizForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { addQuiz } from \"../features/quizzes/quizzesSlice\"; // Import the addQuiz action\nimport { selectTopics } from \"../features/topics/topicsSlice\"; // Import selector for topics\n\nexport default function NewQuizForm() {\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  // Use selector to get topics from state\n  const topics = useSelector(selectTopics);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('Submitting Quiz:', { name, topicId, cards }); // Debugging line\n\n    if (name.length === 0 || topicId.length === 0) {\n      console.log('Quiz name or topic ID is missing'); // Debugging line\n      return; // Ensure both name and topicId are provided\n    }\n\n    const cardIds = cards.map(() => uuidv4()); // Generate IDs for cards\n\n    // Dispatch the addQuiz action with the quiz details\n    dispatch(addQuiz({\n      id: uuidv4(), // Generate ID for the quiz\n      name,\n      topicId,\n      cardIds,\n    }));\n\n    console.log('Quiz added:', { id: uuidv4(), name, topicId, cardIds }); // Debugging line\n\n    navigate(ROUTES.quizzesRoute()); // Navigate after dispatching\n  };\n\n  const addCardInputs = (e) => {\n    e.preventDefault();\n    setCards(cards.concat({ front: \"\", back: \"\" })); // Add new card\n  };\n\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i)); // Remove specific card\n  };\n\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value; // Update card front or back\n    setCards(newCards);\n  };\n\n  return (\n    <section>\n      <h1>Create a new quiz</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          id=\"quiz-name\"\n          value={name}\n          onChange={(e) => setName(e.currentTarget.value)}\n          placeholder=\"Quiz Title\"\n        />\n        <select\n          id=\"quiz-topic\"\n          onChange={(e) => setTopicId(e.currentTarget.value)}\n          placeholder=\"Topic\"\n        >\n          <option value=\"\">Select a Topic</option>\n          {Object.values(topics).map((topic) => (\n            <option key={topic.id} value={topic.id}>\n              {topic.name}\n            </option>\n          ))}\n        </select>\n        {cards.map((card, index) => (\n          <div key={index} className=\"card-front-back\">\n            <input\n              id={`card-front-${index}`}\n              value={cards[index].front}\n              onChange={(e) =>\n                updateCardState(index, \"front\", e.currentTarget.value)\n              }\n              placeholder=\"Front\"\n            />\n            <input\n              id={`card-back-${index}`}\n              value={cards[index].back}\n              onChange={(e) =>\n                updateCardState(index, \"back\", e.currentTarget.value)\n              }\n              placeholder=\"Back\"\n            />\n            <button\n              onClick={(e) => removeCard(e, index)}\n              className=\"remove-card-button\"\n            >\n              Remove Card\n            </button>\n          </div>\n        ))}\n        <div className=\"actions-container\">\n          <button onClick={addCardInputs}>Add a Card</button>\n          <button type=\"submit\">Create Quiz</button>\n        </div>\n      </form>\n    </section>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}